## CC and CXX are set up by INSTALL, no need to use them here.
## CC=@CC@
## CXX=@CXX@
CXX_STD = CXX17

PKG_CFLAGS=@PKG_CFLAGS@
PKG_CPPFLAGS=@PKG_CPPFLAGS@
PKG_LIBS=@PKG_LIBS@

# ## uncomment below to enable debugging
# ##  use `R -d gdb` to start,
# ##  type `c` to start R
# ##  type `library(seqminer)` to load the package
# ##  type `Ctrl+C` to return to GDB and set breakpoints
# CXX17FLAGS = -ggdb -O0
# CXXFLAGS = -ggdb -O0
# PKG_CFLAGS=-D_USE_KNETFILE -I. -ggdb -O0 -ggdb
# PKG_CPPFLAGS=-D_USE_KNETFILE -I. -ggdb -O0 -ggdb
# PKG_LIBS=-lz -lm -lbz2



## Regular expression
## We first check regex.h provided by libc.
## NOTE: we will not use PCRE posix because of potential
## linking problem. For example, when we include <pcreposix.h>,
## during linking, libc library may be used instead of the pcre library. 
## That will crash our program. So we wont use PCRE (@LIB_PCRE@).

## use SQLITE
PKG_CPPFLAGS+=-I. \
             -DRSQLITE_USE_BUNDLED_SQLITE \
             -DSQLITE_ENABLE_RTREE \
             -DSQLITE_ENABLE_FTS3 \
             -DSQLITE_ENABLE_FTS3_PARENTHESIS \
             -DSQLITE_ENABLE_FTS5 \
             -DSQLITE_ENABLE_JSON1 \
             -DSQLITE_ENABLE_STAT4 \
             -DSQLITE_SOUNDEX

## for zstd
PKG_CPPFLAGS+=-Izstd/lib -Izstd/lib/common -DXXH_NAMESPACE=ZSTD_ -Izstd/lib/legacy -DZSTD_LEGACY_SUPPORT=5

ifeq (@HAVE_BZIP2@,1)
$(info have bzip2)
else
$(info do not have bzip2)
endif

ifeq (@HAVE_ZSTD@,1)
ZSTD_OBJ =
PKG_LIBS+=-lzstd
else
ZSTD_OBJ = zstd/lib/common/debug.o \
           zstd/lib/common/entropy_common.o \
           zstd/lib/common/error_private.o \
           zstd/lib/common/fse_decompress.o \
           zstd/lib/common/pool.o \
           zstd/lib/common/threading.o \
           zstd/lib/common/xxhash.o \
           zstd/lib/common/zstd_common.o \
           zstd/lib/compress/fse_compress.o \
           zstd/lib/compress/hist.o \
           zstd/lib/compress/huf_compress.o \
           zstd/lib/compress/zstd_compress.o \
           zstd/lib/compress/zstd_double_fast.o \
           zstd/lib/compress/zstd_fast.o \
           zstd/lib/compress/zstd_lazy.o \
           zstd/lib/compress/zstd_ldm.o \
           zstd/lib/compress/zstd_opt.o \
           zstd/lib/compress/zstdmt_compress.o \
           zstd/lib/decompress/huf_decompress.o \
           zstd/lib/decompress/zstd_decompress.o \
           zstd/lib/deprecated/zbuff_common.o \
           zstd/lib/deprecated/zbuff_compress.o \
           zstd/lib/deprecated/zbuff_decompress.o \
           zstd/lib/dictBuilder/cover.o \
           zstd/lib/dictBuilder/divsufsort.o \
           zstd/lib/dictBuilder/fastcover.o \
           zstd/lib/dictBuilder/zdict.o \
           zstd/lib/legacy/zstd_v05.o \
           zstd/lib/legacy/zstd_v06.o \
           zstd/lib/legacy/zstd_v07.o
endif

ifeq (@HAVE_SQLITE@,1)
SQLITE_OBJ=
PKG_LIBS+=-lsqlite3
else
SQLITE_OBJ = sqlite/sqlite3.o
endif

PKG_LIBS += $(ZSTD_OBJ) $(SQLITE_OBJ)

$(SHLIB): $(ZSTD_OBJ) $(SQLITE_OBJ)
